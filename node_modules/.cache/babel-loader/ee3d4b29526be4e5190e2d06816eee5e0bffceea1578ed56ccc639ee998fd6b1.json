{"ast":null,"code":"var _jsxFileName = \"D:\\\\gitrepos\\\\react_test\\\\usepopcorn\\\\src\\\\TextExpander.js\",\n  _s = $RefreshSig$();\nimport \"./styles.css\";\nimport { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nTextExpander.propTypes = {\n  collapsedNumWords: PropTypes.number,\n  expandButtonText: PropTypes.string,\n  collapseButtonText: PropTypes.string,\n  buttonColor: PropTypes.string,\n  expanded: PropTypes.bool,\n  className: PropTypes.string\n};\nexport default function TextExpander({\n  collapsedNumWords = 20,\n  expandButtonText = \"Show more\",\n  collapseButtonText = \"Show less\",\n  buttonColor = \"blue\",\n  expanded = false,\n  className = \"\",\n  children\n}) {\n  _s();\n  const [textExpanded, setTextExpanded] = useState(expanded);\n  const buttonStyle = {\n    //backgroundColor: `${buttonColor}`,\n    color: `${buttonColor}`,\n    border: \"none\",\n    margin: \"10px\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: className,\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: textExpanded ? children : children.split(\" \").slice(0, collapsedNumWords).join(\" \")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: buttonStyle,\n      onClick: () => setTextExpanded(textExpanded => !textExpanded),\n      children: textExpanded ? collapseButtonText : expandButtonText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(TextExpander, \"ga1p2ZdOmgEnQet3uJqeADAHGt4=\");\n_c = TextExpander;\nvar _c;\n$RefreshReg$(_c, \"TextExpander\");","map":{"version":3,"names":["useState","PropTypes","jsxDEV","_jsxDEV","TextExpander","propTypes","collapsedNumWords","number","expandButtonText","string","collapseButtonText","buttonColor","expanded","bool","className","children","_s","textExpanded","setTextExpanded","buttonStyle","color","border","margin","split","slice","join","fileName","_jsxFileName","lineNumber","columnNumber","style","onClick","_c","$RefreshReg$"],"sources":["D:/gitrepos/react_test/usepopcorn/src/TextExpander.js"],"sourcesContent":["import \"./styles.css\";\r\nimport { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nTextExpander.propTypes = {\r\n  collapsedNumWords: PropTypes.number,\r\n  expandButtonText: PropTypes.string,\r\n  collapseButtonText: PropTypes.string,\r\n  buttonColor: PropTypes.string,\r\n  expanded: PropTypes.bool,\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default function TextExpander({\r\n  collapsedNumWords = 20,\r\n  expandButtonText = \"Show more\",\r\n  collapseButtonText = \"Show less\",\r\n  buttonColor = \"blue\",\r\n  expanded = false,\r\n  className = \"\",\r\n  children,\r\n}) {\r\n  const [textExpanded, setTextExpanded] = useState(expanded);\r\n\r\n  const buttonStyle = {\r\n    //backgroundColor: `${buttonColor}`,\r\n    color: `${buttonColor}`,\r\n    border: \"none\",\r\n    margin: \"10px\",\r\n  };\r\n\r\n  return (\r\n    <div className={className}>\r\n      <span>\r\n        {textExpanded\r\n          ? children\r\n          : children.split(\" \").slice(0, collapsedNumWords).join(\" \")}\r\n      </span>\r\n      <button\r\n        style={buttonStyle}\r\n        onClick={() => setTextExpanded((textExpanded) => !textExpanded)}\r\n      >\r\n        {textExpanded ? collapseButtonText : expandButtonText}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAO,cAAc;AACrB,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,SAAS,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnCC,YAAY,CAACC,SAAS,GAAG;EACvBC,iBAAiB,EAAEL,SAAS,CAACM,MAAM;EACnCC,gBAAgB,EAAEP,SAAS,CAACQ,MAAM;EAClCC,kBAAkB,EAAET,SAAS,CAACQ,MAAM;EACpCE,WAAW,EAAEV,SAAS,CAACQ,MAAM;EAC7BG,QAAQ,EAAEX,SAAS,CAACY,IAAI;EACxBC,SAAS,EAAEb,SAAS,CAACQ;AACvB,CAAC;AAED,eAAe,SAASL,YAAYA,CAAC;EACnCE,iBAAiB,GAAG,EAAE;EACtBE,gBAAgB,GAAG,WAAW;EAC9BE,kBAAkB,GAAG,WAAW;EAChCC,WAAW,GAAG,MAAM;EACpBC,QAAQ,GAAG,KAAK;EAChBE,SAAS,GAAG,EAAE;EACdC;AACF,CAAC,EAAE;EAAAC,EAAA;EACD,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGlB,QAAQ,CAACY,QAAQ,CAAC;EAE1D,MAAMO,WAAW,GAAG;IAClB;IACAC,KAAK,EAAE,GAAGT,WAAW,EAAE;IACvBU,MAAM,EAAE,MAAM;IACdC,MAAM,EAAE;EACV,CAAC;EAED,oBACEnB,OAAA;IAAKW,SAAS,EAAEA,SAAU;IAAAC,QAAA,gBACxBZ,OAAA;MAAAY,QAAA,EACGE,YAAY,GACTF,QAAQ,GACRA,QAAQ,CAACQ,KAAK,CAAC,GAAG,CAAC,CAACC,KAAK,CAAC,CAAC,EAAElB,iBAAiB,CAAC,CAACmB,IAAI,CAAC,GAAG;IAAC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzD,CAAC,eACP1B,OAAA;MACE2B,KAAK,EAAEX,WAAY;MACnBY,OAAO,EAAEA,CAAA,KAAMb,eAAe,CAAED,YAAY,IAAK,CAACA,YAAY,CAAE;MAAAF,QAAA,EAE/DE,YAAY,GAAGP,kBAAkB,GAAGF;IAAgB;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACb,EAAA,CAjCuBZ,YAAY;AAAA4B,EAAA,GAAZ5B,YAAY;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}